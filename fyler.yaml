openapi: 3.0.3
info:
  version: '3.0'
  title: Fyle REST API
  contact:
    name: Integrations
    email: support@fyle.in
servers:
  - url: 'https://accounts.fylehq.com'
    description: Live Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.fylehq.com/app/developers/#/oauth/authorize'
          tokenUrl: 'https://accounts.fylehq.com/oauth/token'
          scopes:
            fyler.*: Grant all FYLER actions
  parameters:
    offset:
      in: query
      name: offest
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: >
        A limit on the number of objects to be returned. Allowed values are from
        1 to 200.
      schema:
        type: integer
        example: 100
        default: 200
    created_at:
      in: query
      name: created_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        created_at=gte.2020-06-01T00:00:00.000Z filters all employees created on
        or after 1st Jun 2020.<br>

        created_at=gte.2020-06-01T00:00:00.000Z&created_at=lt.2020-07-01T00:00:00.000Z
        filters all employees `created` in the month of Jun 2020.<br>
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    updated_at:
      in: query
      name: updated_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z filters all employees updated on
        or after 1st Jun 2020.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z&updated_at=lt.2020-07-01T00:00:00.000Z
        filters all employees `updated` in the month of Jun 2020.<br>
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    id:
      in: query
      name: id
      schema:
        type: string
      description: >-
        Filters the objects by id. For single value use `id=eq.<value>`. For
        multiple values, use `id=in.(value1,value2,value3)`.
      example: eq.<id>
    sub_project:
      in: query
      name: sub_project
      description: |
        Supported operators are `eq`, `like`, `in`.<br>
        sub_project=in.(value1,value2)
      schema:
        type: string
        example: like.Formula*
    display_name:
      in: query
      name: display_name
      description: |
        Supported operators are `eq`, `like`, `in`.<br>
        display_name=in.(value1,value2)
      schema:
        type: string
        example: like.Fast*
    enabled:
      in: query
      name: enabled
      description: |
        This param is used to filer records by
        Supported operators are `eq`,`not.eq`.<br>
      schema:
        type: string
        example: eq.true
    code:
      in: query
      name: code
      description: |
        Supported operators are `eq`, `like`, `in`.<br>
        code=in.(value1,value2)
      schema:
        type: string
        example: like.high*
    org_id:
      in: query
      name: org_id
      description: |
        This param is used to filter records based org id.
        Supported operators are `in`,`eq`.<br>
      schema:
        type: string
        example: eq.orvneouegi
    category_ids:
      in: query
      name: category_ids
      description: |
        List of strings.<br>
        Supported operators are `eq`,`cs`.<br>
      schema:
        type: string
        example: 'cs.{12,7}'
    primary_approver_id:
      in: query
      name: primary_approver_id
      schema:
        type: string
      description: >-
        Filters the objects by primary_approver_id. For single value use
        `primary_approver_id=eq.<value>`. For multiple values, use
        `primary_approver_id=in.(value1,value2,value3)`.
      example: eq.ouX2Rv617cW0
    secondary_approver_id:
      in: query
      name: secondary_approver_id
      schema:
        type: string
      description: >-
        Filters the objects by primary_approver_id. For single value use
        `primary_approver_id=eq.<value>`. For multiple values, use
        `primary_approver_id=in.(value1,value2,value3)`.
      example: eq.ouX2Rv617cW0
  schemas:
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    count:
      description: |
        The total number of objects that can be requested.
      type: integer
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
      default: 200
    limit:
      description: |
        The actual number of objects that are returned in the response.
      type: integer
      example: 100
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      example: orwruogwnngg
    org_name:
      type: string
      description: |
        The Name of the Organization to which the object is associated.
      example: Ministry of Magic
    created_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was created.
      readOnly: true
      example: '2020-06-01T13:14:54.804Z'
    updated_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was updated.
      readOnly: true
      example: '2020-06-11T13:14:55.201598Z'
    category:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          example: '16570'
          description: >
            This id provided by Fyle to identify a category from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces.

            In case if no sub_category is present it is same as name of the
            category.
        system_category:
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
    user:
      type: object
      readOnly: true
      properties:
        email:
          type: string
          format: email
          maxLength: 127
          description: >
            An immutable field that represents the email address of the
            Employee.

            Must be compliant with <a
            href='https://www.ietf.org/rfc/rfc822.txt'>RFC 822.</a>
          example: john.doe@example.com
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    projects:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          description: >
            This id provided by Fyle to identify a project from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
          readOnly: true
          example: '2391'
        org_id:
          $ref: '#/components/schemas/org_id'
        org_name:
          $ref: '#/components/schemas/org_name'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        code:
          type: string
          maxLength: 255
          description: |
            This represents the code of project.
          example: FF-032
        description:
          type: string
          maxLength: 255
          description: |
            This represents the description of project.
          example: Win the trophy
        enabled:
          type: boolean
          description: >
            This indicates if the project is enabled for use within the
            organisation.
          default: true
          example: true
        category_ids:
          type: array
          description: >
            Has the list of all category ids that are applicable for this
            project.
          items:
            type: string
          example:
            - '16570'
        categories:
          type: array
          description: |
            This list of categories that are applicable for this project.
          items:
            $ref: '#/components/schemas/category'
        primary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: >
            Primary approver who will be added as an approver by default for all
            the submitted reports and expenses.
          example:
            full_name: primary approver
            email: primary_approver@example.com
        primary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the primary approver.
          example: ou4b24ugv3vg
        secondary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: |
            A secondary approver who can be added to reports via policies.
          example:
            full_name: secondary approver
            email: secondary_approver@example.com
        secondary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the secondary approver.
          example: ourjgeugv3vg
    get_projects:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        limit:
          $ref: '#/components/schemas/limit'
        url:
          type: string
          example: /v4/fyler/projects
        data:
          type: array
          items:
            $ref: '#/components/schemas/projects'
    employee_id:
      type: string
      maxLength: 255
      description: >
        This id prodvided by Fyle to uniquely identify an employee within an
        organization.

        This id is always prefixed with `ou`.
      readOnly: true
      example: outGt9ju6qP
    employees:
      type: object
      description: Details of the employee to whom this object belongs to.
      readOnly: true
      properties:
        user_id:
          type: string
          maxLength: 255
          description: |
            This id helps to identify employees in other organisations.
            It is always prefixed with the string `us`.
            It is unique per email.
          example: usIYTLwzlaGu
        employee_code:
          type: string
          maxLength: 255
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        location:
          type: string
          maxLength: 255
          example: Bangalore Ofc
        level_id:
          type: string
          maxLength: 255
          example: lvlnvJUe9k6Vx
        department_id:
          type: string
          maxLength: 255
          example: dept9in4oIHpdR
        business_unit:
          type: string
          maxLength: 255
          example: Finance ops
          description: >-
            Represents the business unit of the organization to which of the
            employee belongs.
        title:
          type: string
          maxLength: 255
          example: Branch Manager
          description: Represents the title/desgination of the employee.
        mobile:
          type: string
          description: >
            Mobile number of the employee.

            `Given example is a fake number. We don't know who might answer your
            call.`
          example: +1-202-555-0167
        joining_dt:
          type: string
          format: date
          example: '2018-10-31'
          description: Date string in YYYY-MM-DD format
        full_name:
          type: string
          maxLength: 255
          example: John Doe
          description: >-
            Represents the full name of the employee. Must be at least 3
            characters.
    currency:
      type: string
      maxLength: 10
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>
      example: USD
    amount:
      type: integer
      description: |
        Amount value of the object.
      example: 100
    expense_location:
      type: object
      properties:
        city:
          type: string
          example: London
        state:
          type: string
          example: London
        display_name:
          type: string
        country:
          type: string
          example: United Kingdom
        formatted_address:
          type: string
          example: '221 Baker St, Marylebone, London, United Kingdom'
        latitude:
          type: number
          example: 12.971599
        longitude:
          type: number
          example: 77.594566
    export_info:
      type: object
      readOnly: true
      description: Accounting export information for this object.
      properties:
        exported:
          type: boolean
          description: >
            Signifies whether this object has been exported to external
            accounting system or not.
          example: true
        exported_at:
          type: string
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Signifies when this object was exported to external accounting
            system or not.
          example: '2020-06-01T13:14:54.804Z'
        exported_ids:
          type: array
          items:
            type: string
          description: |
            Array of export IDs 
          example:
            - tpe7sY2bHfl8
            - tpe7fs7wvLU9
    reports:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id prodvided by Fyle to uniquely identify a Expense report.
            This id is always prefixed with `rp`.
          readOnly: true
          example: rpevetgn3kl
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee_email:
          type: string
          maxLength: 127
          format: email
          description: >
            Email address of the Employee for whom the expense was/will-be
            created. Once an Expense is created, the value of this field cannot
            be changed and is immutable. <br>
          example: john.doe@example.com
        employee:
          $ref: '#/components/schemas/employees'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        submitted_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was submitted to the Approvers.

            If the Report is not yet submitted, this could be null. <br>
          readOnly: true
        purpose:
          type: string
        claim_number:
          type: string
          maxLength: 255
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
        state:
          type: string
        source:
          type: string
        approved_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was approved. This field could be null
            if the Report was not yet approved.
          readOnly: true
        verified:
          type: boolean
          description: Indicates whether the Report is verified or not
          readOnly: true
        verified_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was verified. If the Report is not
            verified yet, this could be null.
          readOnly: true
        reimbursed_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was Reimbursed. If the Report is not
            reimbursed or submitted yet, this could be null.
          readOnly: true
        settlement_id:
          type: string
          readOnly: true
          maxLength: 255
          description: >
            An unique ID, generated by Fyle, for identifying the Settlement.
            Once a Report is paid, the value of this field cannot be changed and
            is immutable. <br>
          example: setzS7mbPKPWg
        settled_at:
          readOnly: true
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the report approved was settled. <br>
          example: '2017-07-21T17:32:28Z'
        num_transactions:
          type: integer
        expense_ids:
          type: array
          items:
            type: string
        verification_state:
          type: string
        created_by:
          type: string
        trip_request_id:
          type: string
        physical_bill:
          type: boolean
        physical_bill_at:
          type: string
        manual_flag:
          type: boolean
        policy_flag:
          type: boolean
        type:
          type: string
        from_dt:
          type: string
        to_dt:
          type: string
        locations:
          type: array
          items:
            $ref: '#/components/schemas/expense_location'
        report_approvals:
          type: object
        org_name:
          $ref: '#/components/schemas/org_name'
        org_id:
          $ref: '#/components/schemas/org_id'
        export_info:
          $ref: '#/components/schemas/export_info'
    post_reports:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        limit:
          $ref: '#/components/schemas/limit'
        url:
          type: string
          example: /v4/fyler/reports
        data:
          type: array
          items:
            $ref: '#/components/schemas/reports'
tags:
  - name: Projects
    description: |
      These APIs gives you list of your organisation's Projects data.
  - name: Reports
    description: |
      This API gives you access to your organisation's Expense Reports data.
paths:
  /v4/fyler/projects:
    get:
      tags:
        - Projects
      summary: Returns a list of projects
      operationId: GetProjects
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/id'
        - in: query
          name: name
          description: |
            Supported operators are `eq`, `like`, `in`.<br>
            name=in.(value1,value2)
          schema:
            type: string
            example: eq.Project1
        - $ref: '#/components/parameters/sub_project'
        - $ref: '#/components/parameters/display_name'
        - $ref: '#/components/parameters/enabled'
        - $ref: '#/components/parameters/code'
        - $ref: '#/components/parameters/org_id'
        - $ref: '#/components/parameters/category_ids'
        - $ref: '#/components/parameters/primary_approver_id'
        - $ref: '#/components/parameters/secondary_approver_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_projects'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /v4/fyler/reports:
    post:
      tags:
        - Reports
      summary: Creates Report
      description: |
        This API creates report.
      operationId: PostReports
      requestBody: null
      required: true
      content:
        application/json:
          schema:
            $ref: ../schemas/requests/post/reports.yaml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_reports'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
