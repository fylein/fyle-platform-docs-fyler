openapi: 3.0.3
info:
  version: '3.0'
  title: Fyle REST API
  contact:
    name: Integrations
    email: support@fyle.in
servers:
  - url: 'https://accounts.fylehq.com'
    description: Live Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.fylehq.com/app/developers/#/oauth/authorize'
          tokenUrl: 'https://accounts.fylehq.com/oauth/token'
          scopes:
            fyler.*: Grant all FYLER actions
  parameters:
    offset:
      in: query
      name: offest
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: >
        A limit on the number of objects to be returned. Allowed values are from
        1 to 200.
      schema:
        type: integer
        example: 100
        default: 200
    created_at:
      in: query
      name: created_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        created_at=gte.2020-06-01T00:00:00.000Z filters all employees created on
        or after 1st Jun 2020.<br>

        created_at=gte.2020-06-01T00:00:00.000Z&created_at=lt.2020-07-01T00:00:00.000Z
        filters all employees `created` in the month of Jun 2020.<br>
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    updated_at:
      in: query
      name: updated_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z filters all employees updated on
        or after 1st Jun 2020.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z&updated_at=lt.2020-07-01T00:00:00.000Z
        filters all employees `updated` in the month of Jun 2020.<br>
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    only_enabled:
      in: query
      name: only_enabled
      description: |
        This param is used to filter records.
        Supported operators are `eq`,`not.eq`.<br>
      schema:
        type: string
        example: eq.true
  schemas:
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    count:
      description: |
        The total number of objects that can be requested.
      type: integer
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
      default: 200
    limit:
      description: |
        The actual number of objects that are returned in the response.
      type: integer
      example: 100
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      example: orwruogwnngg
    org_name:
      type: string
      description: |
        The Name of the Organization to which the object is associated.
      example: Ministry of Magic
    created_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was created.
      readOnly: true
      example: '2020-06-01T13:14:54.804Z'
    updated_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was updated.
      readOnly: true
      example: '2020-06-11T13:14:55.201598Z'
    category:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          example: '16570'
          description: >
            This id provided by Fyle to identify a category from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces.

            In case if no sub_category is present it is same as name of the
            category.
        system_category:
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
    user:
      type: object
      readOnly: true
      properties:
        email:
          type: string
          format: email
          maxLength: 127
          description: >
            An immutable field that represents the email address of the
            Employee.

            Must be compliant with <a
            href='https://www.ietf.org/rfc/rfc822.txt'>RFC 822.</a>
          example: john.doe@example.com
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    projects:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          description: >
            This id provided by Fyle to identify a project from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
          readOnly: true
          example: '2391'
        org_id:
          $ref: '#/components/schemas/org_id'
        org_name:
          $ref: '#/components/schemas/org_name'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        code:
          type: string
          maxLength: 255
          description: |
            This represents the code of project.
          example: FF-032
        description:
          type: string
          maxLength: 255
          description: |
            This represents the description of project.
          example: Win the trophy
        enabled:
          type: boolean
          description: >
            This indicates if the project is enabled for use within the
            organisation.
          default: true
          example: true
        category_ids:
          type: array
          description: >
            Has the list of all category ids that are applicable for this
            project.
          items:
            type: string
          example:
            - '16570'
        categories:
          type: array
          description: |
            This list of categories that are applicable for this project.
          items:
            $ref: '#/components/schemas/category'
        primary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: >
            Primary approver who will be added as an approver by default for all
            the submitted reports and expenses.
          example:
            full_name: primary approver
            email: primary_approver@example.com
        primary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the primary approver.
          example: ou4b24ugv3vg
        secondary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: |
            A secondary approver who can be added to reports via policies.
          example:
            full_name: secondary approver
            email: secondary_approver@example.com
        secondary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the secondary approver.
          example: ourjgeugv3vg
    get_projects:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        limit:
          $ref: '#/components/schemas/limit'
        url:
          type: string
          example: /v4/fyler/projects
        data:
          type: array
          items:
            $ref: '#/components/schemas/projects'
    'projects@{id}':
      type: object
      properties:
        url:
          type: string
          example: /v4/fyler/projects/7
        data:
          $ref: '#/components/schemas/projects'
tags:
  - name: Projects
    description: |
      These APIs gives you list of your organisation's Projects data.
paths:
  /v4/fyler/projects:
    get:
      tags:
        - Projects
      summary: List all projects
      operationId: GetProjects
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/only_enabled'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_projects'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  '/v4/fyler/projects/{id}':
    get:
      tags:
        - Projects
      summary: Retrieve a project
      operationId: RetrieveProject
      parameters:
        - in: path
          name: id
          required: true
          description: |
            Id of the project to be retrieved.
          schema:
            type: string
            example: '38'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects@{id}'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
